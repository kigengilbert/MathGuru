/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prog1;
import advanced.advancedcalc;
import java.awt.Color;
import java.util.*;


import java.util.Random;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;


/**
 *
 * @author Whizz
 */
public class dashboard extends javax.swing.JFrame {
    
    public int times=0;
    public int signdata = 0;
    public int level=0;
    public int signal=0, eliminate=0;
    public int progressvalue=0, progresswrong=0,progresstotal=0,progresstime=0, switcher=0;
    public  String[] sign={"+","-","*","/"};
    
           TimerTask tasknew;

        Timer task = new Timer();

    /**
     * Creates new form dashboard
     */
    public dashboard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator3 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        lblQuestion = new javax.swing.JLabel();
        txtQ1 = new javax.swing.JTextField();
        lblSign = new javax.swing.JLabel();
        txtQ2 = new javax.swing.JTextField();
        lblanswer = new javax.swing.JLabel();
        btnAnswer = new javax.swing.JButton();
        cmbLevel = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btnAdvanced = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblCorrect = new javax.swing.JLabel();
        lblprogressbar = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblWrong = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtUserAnswer = new javax.swing.JTextField();
        lblTimeleft = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        info = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblprog = new javax.swing.JLabel();
        reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(153, 153, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setToolTipText("");
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 400));
        jPanel1.setName(""); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 104, 611, 10));

        lblQuestion.setFont(lblQuestion.getFont().deriveFont((lblQuestion.getFont().getStyle() | java.awt.Font.ITALIC) | java.awt.Font.BOLD, lblQuestion.getFont().getSize()+1));
        lblQuestion.setText("Question :");
        jPanel1.add(lblQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        txtQ1.setEditable(false);
        txtQ1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtQ1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtQ1.setText(" ");
        txtQ1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtQ1.setOpaque(false);
        jPanel1.add(txtQ1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 112, 29));

        lblSign.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSign.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSign.setText("  ");
        jPanel1.add(lblSign, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 47, -1));

        txtQ2.setEditable(false);
        txtQ2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtQ2.setText(" ");
        txtQ2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtQ2.setOpaque(false);
        jPanel1.add(txtQ2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 114, 29));

        lblanswer.setFont(new java.awt.Font("Segoe Print", 3, 12)); // NOI18N
        lblanswer.setText("Your Answer");
        lblanswer.setToolTipText("");
        jPanel1.add(lblanswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 87, 26));

        btnAnswer.setBackground(new java.awt.Color(255, 255, 255));
        btnAnswer.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        btnAnswer.setText("Submit Answer");
        btnAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnswerActionPerformed(evt);
            }
        });
        jPanel1.add(btnAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 323, -1, -1));

        cmbLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Easy", "Intermediate", "Hard" }));
        jPanel1.add(cmbLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel2.setText("Level");
        jLabel2.setToolTipText("");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 30, -1));

        btnAdvanced.setBackground(new java.awt.Color(255, 255, 255));
        btnAdvanced.setText("Advanced");
        btnAdvanced.setToolTipText("");
        btnAdvanced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdvancedActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdvanced, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 323, -1, -1));

        jLabel5.setText("Total Correct:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 76, 83, 22));

        lblCorrect.setText(" ");
        jPanel1.add(lblCorrect, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 76, 67, 22));

        lblprogressbar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblprogressbar.setText("Progress");
        jPanel1.add(lblprogressbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 141, 54, -1));

        progress.setBackground(new java.awt.Color(255, 255, 255));
        progress.setForeground(new java.awt.Color(51, 255, 0));
        progress.setMaximum(50);
        progress.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        progress.setBorderPainted(false);
        jPanel1.add(progress, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 147, 475, 8));

        jLabel6.setText("Total Wrong :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(314, 80, -1, -1));

        jLabel8.setText("Total :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 58, -1));

        lblWrong.setText(" ");
        jPanel1.add(lblWrong, new org.netbeans.lib.awtextra.AbsoluteConstraints(398, 78, 66, 19));

        lblTotal.setText(" ");
        jPanel1.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 76, 48, 22));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 68, 621, -1));

        jLabel4.setBackground(new java.awt.Color(0, 102, 204));
        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getSize()+13f));
        jLabel4.setText("MATH QUESTION GAME");
        jLabel4.setToolTipText("");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 11, -1, -1));

        txtUserAnswer.setText(" ");
        txtUserAnswer.setToolTipText("");
        jPanel1.add(txtUserAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, 103, 26));

        lblTimeleft.setText(" ");
        jPanel1.add(lblTimeleft, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 250, 20));

        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        jPanel1.add(start, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 89, -1));

        info.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        info.setText("Click the start button to begin the game");
        jPanel1.add(info, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 246, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 307, 620, 10));

        lblprog.setText(" ");
        jPanel1.add(lblprog, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 141, 56, -1));

        reset.setText("Restart");
        reset.setToolTipText("");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jPanel1.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, Short.MAX_VALUE)
        );

        if(cmbLevel.getSelectedItem()=="Easy"){
            level=100;
        }else if(cmbLevel.getSelectedItem()=="Intermediate"){
            level=500;
        }else{
            level=1000;
        }
        Random t = new Random();
        txtQ1.setText(String.valueOf(t.nextInt(level)+1));
        txtQ2.setText(String.valueOf(t.nextInt(level)+1));
        Random signvalue= new Random();
        signdata=signvalue.nextInt(3);
        lblSign.setText(sign[signdata]);
        if(signdata==3 || signdata==1){
            if(Integer.valueOf(txtQ1.getText())<Integer.valueOf(txtQ2.getText())){
                String temp=txtQ1.getText();
                txtQ1.setText(txtQ2.getText());
                txtQ2.setText(temp);
            }}
            progress.setValue(0);
            lblCorrect.setText(String.valueOf(progressvalue));
            lblWrong.setText(String.valueOf(progresswrong));
            lblTotal.setText(String.valueOf(progresstotal));
            lblTimeleft.setText("2 min: 00 seconds left");

            //hide some controls
            lblprogressbar.setVisible(false);
            progress.setVisible(false);
            lblQuestion.setVisible(false);
            txtQ2.setVisible(false);
            txtQ1.setVisible(false);
            txtUserAnswer.setVisible(false);
            btnAdvanced.setVisible(false);
            btnAnswer.setVisible(false);
            lblSign.setVisible(false);
            lblanswer.setVisible(false);
            lblTimeleft.setVisible(false);

            ;

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btnAdvancedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdvancedActionPerformed
      /*String data="";
      int i=50;
     while(i>0){
           
           Boolean test=checkprime(i);
           if(test){
          data+=String.valueOf(i);
       }else{}
      i--;
       }
         System.out.print(data);
        
        */
      advanced.advancedcalc adv=new advancedcalc();
      adv.setVisible(true);

    }//GEN-LAST:event_btnAdvancedActionPerformed

    private void btnAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnswerActionPerformed
    
       /* Pattern p= Pattern.compile("[a-z A-Z]");
        Matcher m= p.matcher(txtUserAnswer.getText());
        if(m.find()){
        JOptionPan
        Boolean hasNonAplpha=!txtUserAnswer.getText().matches("^.*[^a-zA-Z].*$"); */
     /*  if(ContainsShit(txtUserAnswer.getText())){
            
        JOptionPane.showMessageDialog(this,"Only Numbers allowed");
        }else{*/
       
        int validAnswer=0;
            //sets user hardness level
            if(cmbLevel.getSelectedItem()=="Easy"){
                level=100;
            }else if(cmbLevel.getSelectedItem()=="Intermediate"){
                level=500;
            }else{
                level=9999;
                
                
                
            }
            //gets rid of all blank spaces in the answer
            if(txtUserAnswer.getText().replaceAll("\\s","").equals("")){
                JOptionPane.showMessageDialog(this,"Please enter an answer"," No input detected",WARNING_MESSAGE);
            } else {
                 if(ContainsShit(txtUserAnswer.getText())){
            JOptionPane.showMessageDialog(this, "Acha ufala ,answer ni number pekee si jina yako!");
            txtUserAnswer.setText("");
        }else{
                    //performs the calculation based on the sign selected
                switch(signdata){
                    case 0:
                    validAnswer= Integer.valueOf(txtQ1.getText())+Integer.valueOf(txtQ2.getText());
                    break;
                    case 1:
                    validAnswer= Integer.valueOf(txtQ1.getText())-Integer.valueOf(txtQ2.getText());
                    break;
                    case 2:
                    validAnswer= Integer.valueOf(txtQ1.getText())*Integer.valueOf(txtQ2.getText());
                    break;
                    case 3:
                    validAnswer= Integer.valueOf(txtQ1.getText())/Integer.valueOf(txtQ2.getText());

                }
                String answer =txtUserAnswer.getText();
                int userAnswer= Integer.valueOf(answer.replaceAll("\\s",""));
                //checks if user answer is correct and generates new question
                if (userAnswer==validAnswer){
                    
                        progressvalue++;
                        lblCorrect.setText(String.valueOf(progressvalue));
                        progresstotal++;
                        lblTotal.setText(String.valueOf(progresstotal));
                    JOptionPane.showMessageDialog(this, "Correct!! Keep up " + progressvalue);
                    Random gen = new Random();
                    txtQ1.setText(String.valueOf(gen.nextInt(level)));
                    txtQ2.setText(String.valueOf(gen.nextInt(level)));
                    txtUserAnswer.setText("");
                    Random signvalue= new Random();
                    signdata=signvalue.nextInt(4);
                    lblSign.setText(sign[signdata]);
                    if(signdata==3 || signdata==1){
                        if(Integer.valueOf(txtQ1.getText())<Integer.valueOf(txtQ2.getText())){
                            String temp=txtQ1.getText();
                            txtQ1.setText(txtQ2.getText());
                            txtQ2.setText(temp);
                        }
                       
                       
                         

                    }
                }else{
                    if(times<2){
                        JOptionPane.showMessageDialog(this,"Incorrect. Try Again");
                        times++;
                        txtUserAnswer.setText("");
                        
                    }
                    else{
                        progresswrong++;
                        lblWrong.setText(String.valueOf(progresswrong));
                        progresstotal++;
                        lblTotal.setText(String.valueOf(progresstotal));
                        JOptionPane.showMessageDialog(this, "You have failed 3 times .The Answer is " + validAnswer +".work on your math!");
                        Random gen2 = new Random();
                        txtQ1.setText(String.valueOf(gen2.nextInt(level)));
                        txtQ2.setText(String.valueOf(gen2.nextInt(level)));

                        txtUserAnswer.setText("");
                        times=0;
                        Random signvalue= new Random();
                        signdata=signvalue.nextInt(4);

                        lblSign.setText(sign[signdata]);
                        if(signdata==3 || signdata==1){
                            
                            if(Integer.valueOf(txtQ1.getText())<Integer.valueOf(txtQ2.getText())){
                                String temp=txtQ1.getText();
                                txtQ1.setText(txtQ2.getText());
                                txtQ2.setText(temp);
                                
                            }}
                       
                           
                        
                        }

                    }
               
                
            
           
        }}

    }//GEN-LAST:event_btnAnswerActionPerformed
    
    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        
          lblTimeleft.setForeground(Color.BLACK);
        if(cmbLevel.getSelectedItem()=="Easy"){
                level=100;
            }else if(cmbLevel.getSelectedItem()=="Intermediate"){
                level=500;
            }else{
                level=9999;
                
            }
        
        
      
            
        
        
        tasknew= new TimerTask() {
          
            public void run() {
               
                    
                if(switcher==0){
                if(progresstime<300){
                progresstime +=1 ;
                 int modifiedtime=300-progresstime;
                 int seconds=modifiedtime%60;
                 int minutes=(modifiedtime-seconds)/60;
                 
                progress.setValue(progresstotal);
                lblprog.setText(progresstotal+"/50");
                lblTimeleft.setText("Time remaining : Mins: "+minutes+" Seconds: "+ seconds );
                        
                            
                }else{ 
                
                
                
                JOptionPane.showMessageDialog(jPanel1, "Total Correct: "+progressvalue+"\n"+"Total Incorrect: "+ progresswrong +"\n"+"Total Answered: "+progresstotal+"\n"+"Result: "+(progressvalue/progresstotal)*100+"%", "Time is up!", signdata);
                    reset();
                
                        }
                    switcher++;
                }else{
                    switcher--;
                    
                }
                int modifiedtime2=300-progresstime;
                
                if(modifiedtime2<30){
                    lblTimeleft.setForeground(Color.red);
                if(switcher==0){
                lblTimeleft.setVisible(false);
                }else{
                
                lblTimeleft.setVisible(true);
                }
                
                }else{}
                
                
                
            }
        };
        task.scheduleAtFixedRate(tasknew, new Date(),500);
                lblprogressbar.setVisible(true);
                progress.setVisible(true);
                lblQuestion.setVisible(true);
                txtQ2.setVisible(true);
                txtQ1.setVisible(true);
                txtUserAnswer.setVisible(true);
                btnAdvanced.setVisible(true);
                btnAnswer.setVisible(true);
                lblSign.setVisible(true);
                lblanswer.setVisible(true);
                lblTimeleft.setVisible(true);
                lblprog.setVisible(true);
                start.setVisible(false);
                info.setVisible(false);
                
                
                

      
        
    }//GEN-LAST:event_startActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        
        task.purge();
        reset();
        
        startActionPerformed(evt);
        
       
       // startActionPerformed(evt);
    }//GEN-LAST:event_resetActionPerformed
 
    public void reset(){
    times=0;signdata = 0;level=0;signal=0;
    progressvalue=0; progresswrong=0; progresstotal=0; progresstime=0;switcher=0;
    
            lblTimeleft.setText("2 min: 00 seconds left");

                //hide some controls
                lblprogressbar.setVisible(false);
                progress.setVisible(false);
                lblQuestion.setVisible(false);
                txtQ2.setVisible(false);
                txtQ1.setVisible(false);
                txtUserAnswer.setVisible(false);
                btnAdvanced.setVisible(false);
                btnAnswer.setVisible(false);
                lblSign.setVisible(false);
                lblanswer.setVisible(false);
                lblTimeleft.setVisible(false);
                info.setVisible(true);
                start.setVisible(true);
                lblprog.setVisible(false);
                lblWrong.setText(String.valueOf(progresswrong));
                lblTotal.setText(String.valueOf(progresstotal));
                lblWrong.setText(String.valueOf(progresswrong));
                lblCorrect.setText(String.valueOf(progressvalue));
                lblprog.setText(progresstotal+"/50");
    
    }
    public boolean checkprime(int mine){
         if(mine%2==0){
              if(mine==2){
                 return true;
         }else{
                return false;
           }
    } else{
    
        for(int i=3;i< Math.sqrt(mine);i++){
            if(mine==3){
                return true;
            }else{
                   if(mine%i==0){
                return false;
            }
        }
    }}
  return false;
    }
    
    public boolean ContainsShit(String mystring){
        mystring.replaceAll("[0-9]","").equals("");
      String data[]={"0","1","2","3","4","5","6","7","8","9"};
            for(int l=0 ;l<mystring.length();l++){
                    
                        
                for(int a=0; a<data.length;a++){
                    String e=String.valueOf(mystring.charAt(l));
                   if(e.equals(data[a])||e.equals(" ")){
                   return false;
                   }
                    
                }
                return true;
            
    }
            return true;
    }
   
    
    /**
     * @param args the command line arguments
       */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
           
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new dashboard().setVisible(true);
            
            
        });    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdvanced;
    private javax.swing.JButton btnAnswer;
    private javax.swing.JComboBox cmbLevel;
    public javax.swing.JLabel info;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblCorrect;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblSign;
    private javax.swing.JLabel lblTimeleft;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblWrong;
    private javax.swing.JLabel lblanswer;
    private javax.swing.JLabel lblprog;
    private javax.swing.JLabel lblprogressbar;
    private javax.swing.JProgressBar progress;
    private javax.swing.JButton reset;
    private javax.swing.JButton start;
    private javax.swing.JTextField txtQ1;
    private javax.swing.JTextField txtQ2;
    private javax.swing.JTextField txtUserAnswer;
    // End of variables declaration//GEN-END:variables

}
